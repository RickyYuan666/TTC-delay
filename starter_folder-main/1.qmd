---
title: "Your title"
author: "Your name"
date: format(Sys.time(), "%d %B %Y")
format: pdf
---

# Introduction

In this document, we will download a dataset using the `opendatatoronto` package, clean it, and visualize it using `ggplot2`. 

# Downloading the Dataset

We will use the `opendatatoronto` package to access a dataset from the City of Torontoâ€™s open data portal.

```{r}
#| echo: false
#| warning: false
# Install necessary packages (if not installed)
#install.packages("opendatatoronto")
# install.packages("tidyverse")
library(opendatatoronto)
library(tidyverse)

# Retrieve a list of all available data packages from the OpenDataToronto portal
packages <- list_packages(150)
# Display the list of available packages
packages
```

```{r}
#| echo: false
#| warning: false
# Search for a specific package on OpenDataToronto by keyword ("Marriage Licence Statistics")
marriage_licence_packages <- search_packages("TTC Subway Delay Data")
marriage_licence_packages
# Retrieve a list of all resources (datasets) available within the found package
marriage_licence_resources <- marriage_licence_packages %>%
  list_package_resources()
# Display the list of resources available in the "Marriage Licence Statistics" package
marriage_licence_resources
```

```{r}
# Download the .csv dataset
marriage_licence_statistics <- marriage_licence_resources[10,] %>% get_resource()
```

```{r}
marriage_licence_statistics
write_csv(marriage_licence_statistics, "C:/Users/win/Desktop/a.csv")
```

# Cleaning the dataset

For data cleaning, we first selected the relevant variables: civic center, marriage licenses, and time period, while removing any unnecessary variables We then converted the time period from a string format (e.g., "YYYY-MM") to a proper date format for easier analysis and plotting. Finally, we ensured data quality by removing any rows with missing values to maintain the integrity of the dataset for analysis and visualization.

```{r}
#| echo: false
#| warning: false
# Cleaning the dataset
cleaned_data <- marriage_licence_statistics %>%
  # Select relevant columns
  select(CIVIC_CENTRE, MARRIAGE_LICENSES, TIME_PERIOD) %>%
  # Convert TIME_PERIOD to Date type (assuming monthly data)
  mutate(TIME_PERIOD = as.Date(paste0(TIME_PERIOD, "-01"),
                               format="%Y-%m-%d")) %>%
  # Remove rows with missing values if any
  drop_na()

# View the cleaned dataset (optional)
head(cleaned_data)
```

# Creating a plot

For graphing, we plotted the number of marriage licenses over time, with each civic center represented by a different color. The x-axis shows the time period, while the y-axis displays the number of marriage licenses issued. A line graph was used to illustrate trends over time for each civic center, allowing for easy comparison of marriage license activity across different locations. The labels and color coding make it clear which civic center corresponds to each trend, providing a visual representation of the data.

```{r}
#| echo: false
#| warning: false
# Plot the number of marriage licenses over time by civic center
ggplot(cleaned_data, aes(x = TIME_PERIOD, 
                         y = MARRIAGE_LICENSES, 
                         color = CIVIC_CENTRE)) +
  geom_line() +
  labs(title = "Marriage Licenses Over Time by Civic Centre",
       x = "Time Period",
       y = "Number of Marriage Licenses",
       color = "Civic Centre") +
  theme_minimal()
```

